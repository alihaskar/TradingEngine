{
  "openapi": "3.0.1",
  "info": {
    "title": "Trading Engine",
    "description": "This is a swagger representation of the TradeEngine API interface.",
    "contact": {
      "email": "par.bertilsson@yahoo.com"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "TE WEB Socket Interface (description of the unsolicited broadcast flow published by the TE)",
    "url": "te-wss-api.json"
  },
  "servers": [
    {
      "url": "https://www.hoddmimes.com:8383/te"
    }
  ],
  "paths": {
    "/logon": {
      "post": {
        "tags": [
          "te"
        ],
        "summary": "Login and create a session to the Trading Engine (TE)",
        "description": "Before any request can be sent to the trading engine a logon request must be sent.",
        "operationId": "Logon",
        "x-codegen-request-body-name": "body",
        "requestBody": {
          "description": "login object that needs to sign on to the trading engine",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "returned on successful logon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid logon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/addOrder": {
      "post": {
        "tags": [
          "te"
        ],
        "summary": "Submit an order to the the trading engine",
        "operationId": "AddOrder",
        "x-codegen-request-body-name": "body",
        "requestBody": {
          "description": "order being sent to the trading engine",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order successfully processed by the trading engine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/deleteOrder": {
      "post": {
        "tags": [
          "te"
        ],
        "summary": "cancel / delete a previously added order in the trading engine",
        "operationId": "DeleteOrder",
        "x-codegen-request-body-name": "body",
        "requestBody": {
          "required": true,
          "description": "identifies the order to be deleted",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order successfully cancelled from the trading engine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOrderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/amendOrder": {
      "post": {
        "tags": [
          "te"
        ],
        "summary": "amend a previously added order in the trading engine",
        "operationId": "AmmendOrder",
        "x-codegen-request-body-name": "body",
        "requestBody": {
          "required": true,
          "description": "identifies the order to be amended",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmendOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order successfully ammended in the trading engine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmendOrderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/deleteAllOrder/{marketId}": {
      "delete": {
        "tags": [
          "te"
        ],
        "summary": "cancel / delete all previously added and active orders",
        "operationId": "DeleteAllOrder",
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "required": true,
            "description": "ID of of the market for whitch active orders should be deleted.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "symbol for which active orders are to be cancelled / deleted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "order successfully cancelled from the trading engine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/queryMarkets": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query trading engine Markets",
        "description": "query defined and available markets used in the trading engine.",
        "operationId": "QueryMarkets",
        "responses": {
          "200": {
            "description": "symbols in the trading engine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryMarketsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/querySymbols/{marketId}": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query trading engine symbols / instruments",
        "description": "query defined and available symbols / instruments used in the trading engine.",
        "operationId": "QuerySymbols",
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "ID of of the market for whitch symbols should be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "symbols in the trading engine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySymbolsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/queryTradePrices/{marketId}": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query trade prices",
        "description": "query trade prices for all symbols in a market segment.",
        "operationId": "QueryTradePriceses",
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "ID of the market for wich trade prices should be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "trade prices for the symbols in the specified market segment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTradePricesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/queryOrderbook/{sid}": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query orderbook",
        "description": "query a snapshot of the orders in the orderbook.",
        "operationId": "QueryOrderbook",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "ID of the symbol identifying the orderbook for wich active orders should be returned.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a list of the active orders in the specified orderbook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOrderbookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/queryPriceLevels/{marketId}": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query orderbook price levels",
        "description": "query price levels for the orderbooks in a specified market segment",
        "operationId": "QueryPrices",
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "ID of the market identifying the orderbooks for wich aggregated price levels should be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a list of the active orders in the specified orderbook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPriceLevelsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      },
      "/queryOwnTrades/{marketId}": {
        "get": {
          "tags": [
            "te"
          ],
          "summary": "query own trades",
          "description": "query own trades for the specified market segment",
          "operationId": "QueryOwnTrades",
          "parameters": [
            {
              "name": "marketId",
              "in": "path",
              "description": "ID of the market for wich own trades should be returned",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ]
        },
        "responses": {
          "200": {
            "description": "a list of the trades in done for the market and the current day",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOwnTradesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/queryOwnOrders/{marketId}": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query own orders",
        "description": "query own orders for the orderbooks in a specified market segment",
        "operationId": "QueryOwnOrders",
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "ID of the market identifying the markets segment for wich own orders should be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a list of the active orders in the specified orderbook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOwnOrdersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    },
    "/queryBBO/{marketId}": {
      "get": {
        "tags": [
          "te"
        ],
        "summary": "query best bid/offer prices",
        "description": "query best bid / offer prices for all orderbooks in a market segment",
        "operationId": "QueryBBO",
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "ID of the market identifying the markets segment for wich BBO prices should returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a BBO prices for the specified segment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBBOResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StatusMessage": {
        "type": "object",
        "properties": {
          "isOk": {
            "type": "boolean",
            "default": false
          },
          "ref": {
            "type": "string",
            "description": "user reference identifying the request"
          },
          "statusMessage": {
            "type": "string"
          },
          "exceptionMessage": {
            "type": "string"
          }
        },
        "required": [
          "isOk",
          "ref",
          "statusMessage"
        ]
      },
      "LogonRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "account",
          "password"
        ]
      },
      "LogonResponse": {
        "type": "object",
        "properties": {
          "sessionAuthId": {
            "type": "string",
            "description": "session API id used and required when establish the WebSocket session, then passed as query parameter"
          }
        },
        "required": [
          "ref",
          "sessionAuthId",
          "statusMessage"
        ]
      },
      "AddOrderRequest": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "description": "symbol id identifying the tradeable entity"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "side": {
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "ref": {
            "type": "string",
            "description": "user reference tag with order. The ref is returned together with order update related messages."
          }
        },
        "required": [
          "price",
          "quantity",
          "ref",
          "side",
          "symbol"
        ]
      },
      "AddOrderResponse": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "inserted": {
            "type": "boolean"
          },
          "matched": {
            "type": "integer",
            "format": "int32",
            "description": "quantity matched when inserting the order to the book"
          }
        },
        "required": [
          "inserted",
          "matched",
          "orderId",
          "ref"
        ]
      },
      "DeleteOrderRequest": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "sid": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "ref",
          "symbol"
        ]
      },
      "DeleteOrderResponse": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "remaing": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "ref",
          "symbol",
          "orderId",
          "remaining"
        ]
      },
      "AmendOrderRequest": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "sid": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "deltaQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "side": {
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          }
        },
        "required": [
          "ref",
          "symbol",
          "orderId"
        ]
      },
      "AmendOrderResponse": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "inserted": {
            "type": "boolean"
          },
          "matched": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "ref",
          "inserted",
          "orderId",
          "matched"
        ]
      },
      "QueryMarketsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "tickSize": {
              "type": "number",
              "format": "double"
            },
            "closed": {
              "type": "boolean",
              "default": false
            },
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "minPricePctChg": {
              "type": "number",
              "format": "double"
            },
            "maxPricePctChg": {
              "type": "number",
              "format": "double"
            },
            "marketOpen": {
              "pattern": "^\\d{2}-\\d{2}$",
              "type": "string"
            },
            "marketClose": {
              "pattern": "^\\d{2}-\\d{2}$",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "tickSize",
            "closed",
            "enabled",
            "minPricePctChg",
            "maxPricePctChg",
            "marketOpen",
            "marketClose"
          ]
        }
      },
      "QuerySymbolsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "marketId": {
              "type": "integer",
              "format": "int32"
            },
            "tickSize": {
              "type": "number",
              "format": "double"
            },
            "minPricePctChg": {
              "type": "number",
              "format": "double"
            },
            "maxPricePctChg": {
              "type": "number",
              "format": "double"
            },
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "closed": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "name",
            "marketId",
            "tickSize"
          ]
        }
      },
      "QueryTradePricesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sid": {
              "type": "string"
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "total quantity traded during day"
            },
            "time": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2]:\\d{2}:\\d{2}\\.\\d{3}$",
              "description": "last trade time, yyyy-MM-dd HH:mm:ss.SSS"
            },
            "last": {
              "type": "number",
              "format": "double",
              "description": "last trade price"
            },
            "open": {
              "type": "number",
              "format": "double",
              "description": "open trade price"
            },
            "low": {
              "type": "number",
              "format": "double",
              "description": "lowest trade price during the day"
            },
            "high": {
              "type": "number",
              "format": "double",
              "description": "high trade price during the day"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "string"
          },
          "side": {
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          }
        }
      },
      "PriceLevel": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QueryOrderbookResponse": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string"
          },
          "obSeqNo": {
            "type": "integer",
            "format": "int64"
          },
          "buyOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "sellOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          }
        }
      },
      "QueryPriceLevelsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sid": {
              "type": "string"
            },
            "buySide": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PriceLevel"
              }
            },
            "sellSide": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PriceLevel"
              }
            }
          }
        }
      },
      "QueryOwnOrdersResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sid": {
              "type": "string"
            },
            "orderId": {
              "type": "string"
            },
            "price": {
              "type": "number",
              "format": "double"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            },
            "ref": {
              "type": "string"
            },
            "side": {
              "type": "string",
              "enum": [
                "BUY",
                "SELL"
              ]
            }
          }
        }
      },
      "QueryOwnTradesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sid": {
              "type": "string"
            },
            "orderId": {
              "type": "string"
            },
            "price": {
              "type": "number",
              "format": "double"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            },
            "tradeId": {
              "type": "string"
            },
            "time": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2]:\\d{2}:\\d{2}\\.\\d{3}$"
            },
            "side": {
              "type": "string",
              "enum": [
                "BUY",
                "SELL"
              ]
            }
          }
        }
      },
      "QueryBBOResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sid": {
              "type": "string"
            },
            "bid": {
              "type": "number",
              "format": "double"
            },
            "bidQty": {
              "type": "integer",
              "format": "int32"
            },
            "offer": {
              "type": "number",
              "format": "double"
            },
            "offerQty": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    }
  }
}